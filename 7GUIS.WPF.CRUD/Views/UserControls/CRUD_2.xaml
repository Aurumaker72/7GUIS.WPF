<UserControl x:Class="_7GUIS.WPF.CRUD.Views.UserControls.CRUD_2"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:_7GUIS.WPF.CRUD.ViewModels"
             xmlns:helpers="clr-namespace:_7GUIS.WPF.CRUD.Views.Helpers"
             xmlns:converters="clr-namespace:_7GUIS.WPF.CRUD.Views.Converters"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             x:Name="Root">
    <UserControl.Resources>
        <helpers:DataContextProxy x:Key="DataContextProxy" DataSource="{Binding}" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel Orientation="Vertical" Margin="5">
            <TextBlock Margin="0 0 0 5">Filter</TextBlock>
            <TextBox Text="{Binding Filter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>

        <Grid Grid.Row="1" Margin="5">
            <ListView
                ItemsSource="{Binding FilteredPersonViewModels}"
                      SelectedItem="{Binding SelectedPersonViewModel, Mode=OneWayToSource}">
                <ListView.ItemTemplate>
                    <DataTemplate DataType="{x:Type viewModels:PersonViewModel}">
                        <Grid HorizontalAlignment="Stretch" IsSharedSizeScope="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition SharedSizeGroup="A" Grid.IsSharedSizeScope="True" />
                                <ColumnDefinition SharedSizeGroup="B" Grid.IsSharedSizeScope="True" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <ToggleButton Margin="0 0 5 0" x:Name="Edit_ToggleButton">Edit</ToggleButton>

                            <TextBox Grid.Column="1"
                                     Visibility="{Binding ElementName=Edit_ToggleButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                     Text="{Binding FirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBox Grid.Column="2"
                                     Visibility="{Binding ElementName=Edit_ToggleButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                                     Text="{Binding LastName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Margin="5 0 0 0" />

                            <TextBlock Grid.Column="1" Grid.ColumnSpan="2"  VerticalAlignment="Center"
                            Visibility="{Binding ElementName=Edit_ToggleButton, Path=IsChecked, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"
                            Text="{Binding DisplayName}" />

                            <Button Grid.Column="3" HorizontalAlignment="Right"
                                    Command="{Binding Source={StaticResource DataContextProxy}, Path=DataSource.DeletePersonViewModelCommand}"
                                    CommandParameter="{Binding}">
                                Delete
                            </Button>
                        </Grid>

                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
        </Grid>

        <StackPanel Grid.Row="2" Orientation="Horizontal">
            <Button Command="{Binding CreateCommand}" Padding="20 0 20 0" Margin="5">Create</Button>
        </StackPanel>
    </Grid>
</UserControl>